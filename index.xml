<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Honux BBS</title><link>https://honux77.github.io/</link><description>Recent content on Honux BBS</description><generator>Hugo -- gohugo.io</generator><language>ko-kr</language><lastBuildDate>Mon, 19 Oct 2020 23:09:08 +0000</lastBuildDate><atom:link href="https://honux77.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>BOJ 1927 최소 힙</title><link>https://honux77.github.io/post/boj-1927/</link><pubDate>Mon, 19 Oct 2020 23:09:08 +0000</pubDate><guid>https://honux77.github.io/post/boj-1927/</guid><description>BOJ 1927 최소 힙 BOJ 1927은 말 그대로 최소 힙을 구현하는 문제다.
풀이 1: STL 사용 cpp에서 min(max) heap은 priority_queue를 이용하면 된다.
#include &amp;lt;cstdio&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;algorithm&amp;gt; #include &amp;lt;queue&amp;gt; using namespace std; using ull = long long int; int main() { ios_base::sync_with_stdio(false); cin.tie(nullptr); priority_queue&amp;lt;int, vector&amp;lt;int&amp;gt;, greater&amp;lt;int&amp;gt;&amp;gt; q; int n; cin &amp;gt;&amp;gt; n; for (int i = 0; i &amp;lt; n; i++) { int num; cin &amp;gt;&amp;gt; num; if (num == 0) { if (q.</description></item><item><title>GitHub Action으로 HUGO Publish 쉽게 하기</title><link>https://honux77.github.io/post/github-action-hugo-publish/</link><pubDate>Tue, 29 Sep 2020 16:33:56 +0000</pubDate><guid>https://honux77.github.io/post/github-action-hugo-publish/</guid><description>GitHub Action으로 Hugo Publish 쉽게 하기 publish.yml 생성 아래 내용으로 .github/workflws 아래에 publish.yml을 생성한다. name: github pages on: push: branches: - master # Set a branch to deploy jobs: deploy: runs-on: ubuntu-18.04 steps: - uses: actions/checkout@v2 with: submodules: true # Fetch Hugo themes (true OR recursive) fetch-depth: 0 # Fetch all history for .GitInfo and .Lastmod - name: Setup Hugo uses: peaceiris/actions-hugo@v2 with: hugo-version: '0.75.1' # extended: true - name: Build run: hugo --minify - name: Deploy uses: peaceiris/actions-gh-pages@v3 with: github_token: ${{ secrets.</description></item><item><title>forestry로 블로그글 쉽게 쓰기</title><link>https://honux77.github.io/post/forestry/</link><pubDate>Tue, 29 Sep 2020 15:38:40 +0000</pubDate><guid>https://honux77.github.io/post/forestry/</guid><description>forestry.io 로 편하게 글쓰기 또 상혁님이 알려주신 forestry.io 사이트를 이용해서 글을 써 보는 중이다.
forestry는 정적 페이지를 쉽게 생성해 주는 사이트이다.
일단 내 깃헙 저장소를 import 하고, 템플릿을 만들고 나면 템플릿을 이용해서 글을 쓸 수 있다.
글을 쓴 이후에는 원래는 PC에서 hugo -D 커맨드로 static 페이지를 생성해야 하는데 깃헙 액션을 이용하면 그것도 대체 가능하다.
깃헙 액션 Huto to GH Pages는 다음번에 적용해 보자.</description></item><item><title>알고리즘 - BOJ 10814 나이순 정렬</title><link>https://honux77.github.io/post/algorithm-200929/</link><pubDate>Tue, 29 Sep 2020 13:13:00 +0900</pubDate><guid>https://honux77.github.io/post/algorithm-200929/</guid><description>BOJ BOJ 10814 나이순 정렬 문제는 간단한 정렬문제이다.
다만 기본 정렬인 퀵정렬은 불안전 정렬이기 때문에 안정정렬을 사용해야 한다.
실패 분석 출력이 많은데 endl을 사용하면 시간초과가 발생한다. 그 사실을 모르고 복잡도 때문인지 알고 카운팅 소트를 구현해서 사용했다. 안정 정렬 구현 코드 #include &amp;lt;cstdio&amp;gt; #include &amp;lt;iostream&amp;gt; #include &amp;lt;vector&amp;gt; #include &amp;lt;string&amp;gt; #include &amp;lt;algorithm&amp;gt; using namespace std; using i64 = long long int; struct People { int age; string name; }; bool cmp(const People &amp;amp;a, const People &amp;amp;b) { return a.</description></item><item><title>WSL2와 VS 코드를 이용한 개발환경 설정</title><link>https://honux77.github.io/post/wsl-vs-code-setting/</link><pubDate>Thu, 24 Sep 2020 10:28:21 +0900</pubDate><guid>https://honux77.github.io/post/wsl-vs-code-setting/</guid><description>WSL2가 나온 이후로 윈도우에서 간단한 개발환경 세팅이 좋아졌다.
윈도우즈 터미널로 ubuntu zsh을 바로 띄울 수 있고, vscode의 remote 기능을 이용하면 네이티브처럼 개발이 가능하다.
Git Bash 설치 WSL보다 가볍게 bash를 사용할 수 있으므로 git 작업과 간단한 작업을 할 때 유용하다. https://git-scm.com/ 에서 설치 가능
윈도우즈 터미널 설치 MS 스토어를 이용해서 설치하는 것이 가장 편하다.
설치 후에는 윈도우즈 터미널에서 파워셸, 명령창, git-bash, WSL 모두 띄우게 설정하면 편하게 사용할 수 있다.
참고: 터미널에 git-bash 추가 아래 내용은 내가 사용하고 있는 내용인데 터미널 설정 파일에 이 부분을 추가하면 된다.</description></item><item><title>알고리즘 - BOJ 10972 다음 순열</title><link>https://honux77.github.io/post/algorithm-200905/</link><pubDate>Sat, 05 Sep 2020 15:23:57 +0900</pubDate><guid>https://honux77.github.io/post/algorithm-200905/</guid><description>BOJ BOJ 10972 다음 순열 문제는 말 그대로 사전순으로 다음 순열을 찾는 문제다.
일종의 Brute force 문제인데, 구현이 쉽지 않았다.
아이디어 단계 1 역순 정렬되어 있으면 다음 순열이 없으므로 -1 을 출력한다. 처음 바꿔야 하는 숫자를 뒤에서 앞으로 순회하며 찾는다. 대상은 자신의 값이 뒷자리보다 작은 숫자 예1: 1, 2, 3, [4], 5 라면 4가 해당 예2: 1, [2], 5, 4, 3 이라면 2가 해당 단계 2 이번에는 찾은 숫자 a와 바꿀 숫자 b를 다시 뒤에서부터 찾는다.</description></item><item><title>HUGO 테마 업데이트</title><link>https://honux77.github.io/post/update-hugo-386k/</link><pubDate>Fri, 04 Sep 2020 12:00:23 +0900</pubDate><guid>https://honux77.github.io/post/update-hugo-386k/</guid><description>휴고 테마 업데이트 간단하게 테마를 업데이트했다.
프론트는 잘 모르지만 구글 개발자 도구의 도움으로 그럭저럭 할 수 있었다.
해당하는 컴포넌트를 찍고, 적용되는 CSS 요소를 찾아서 직접 수정하는 방식을 사용했다.
한글 폰트 적용 한글 폰트는 추천받은 둥근모꼴 을 적용 코드 블록 색상 변경 약간 그린 모니터 감성이 나도록 수정했다. APPLE ][ ] 10 PRINT &amp;quot;HELLO, HUGO&amp;quot; RUN HELLO, HUGO</description></item><item><title>HUGO로 깃헙 블로깅하기</title><link>https://honux77.github.io/post/install-hugo/</link><pubDate>Wed, 02 Sep 2020 19:28:55 +0900</pubDate><guid>https://honux77.github.io/post/install-hugo/</guid><description>HUGO로 깃헙 블로깅 하기 HUGO는 go 언어로 만들어진 static 웹 페이지 생성기이다.
네이버 개발자 정상혁님이 공유해주신 레트로 테마가 맘에 들어서 설치하였다.
설치 퀵스타트를 참고해서 설치한다.
맥, 윈도우, 리눅스, 도커 모두 간편하게 설치가 가능하다.
다만 맥은 brew, 윈도우는 chocolatey를 먼저 설치해야 한다.
맥 brew install hugo windows choco install hugo -confirm 사이트 생성 my-blog라는 폴더를 생성하고 그 아래에 hugo를 셋업한다.
hugo new site my-blog 테마 설치 맘에 드는 테마를 설치한다.</description></item><item><title>첫 번째 글</title><link>https://honux77.github.io/post/my-first-post/</link><pubDate>Mon, 31 Aug 2020 11:35:58 +0900</pubDate><guid>https://honux77.github.io/post/my-first-post/</guid><description>Hello, Hugo 첫번째 글 N사 지인이 공유해 주신 하이텔 스타일 테마가 맘에 들어서 글을 하나 올려봤다.
이번에는 꾸준히 글을 쓸 수 있을까?</description></item></channel></rss>