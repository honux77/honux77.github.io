<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>jvm on Honux BBS</title>
    <link>https://honux77.github.io/tags/jvm/</link>
    <description>Recent content in jvm on Honux BBS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <lastBuildDate>Tue, 17 Nov 2020 02:36:47 +0000</lastBuildDate>
    
	<atom:link href="https://honux77.github.io/tags/jvm/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>백기선 자바 스터디 1: JVM과 자바 실행</title>
      <link>https://honux77.github.io/post/1-jvm/</link>
      <pubDate>Tue, 17 Nov 2020 02:36:47 +0000</pubDate>
      
      <guid>https://honux77.github.io/post/1-jvm/</guid>
      <description>Java Virtual Machine (JVM)  [위키 링크](https://en.wikipedia.org/wiki/Java_virtual_machine_ 자바 프로그램을 실행할 수 있는 가상 머신 바이트코드로 컴파일할수 있는 다른 프로그래밍 언어(Kotlin, Groovy) 도 실행할 수 있다. JVM 위에서 돌아가는 프로그래밍 언어도 만들 수 있을 것 같다. 유튜브 링크  .java 컴파일  터미널에서 컴파일하는 방법이 가장 간단  javac &amp;lt;옵션&amp;gt; &amp;lt;소스파일&amp;gt;유용한 옵션 javac --help 로 옵션을 확인할 수 있다.
 --class-path &amp;lt;path&amp;gt;, -classpath &amp;lt;path&amp;gt;, -cp &amp;lt;path&amp;gt;Specify where to find user class files and annotation processors-d &amp;lt;directory&amp;gt; Specify where to place generated class files-g Generate all debugging info--help, -help, -?</description>
    </item>
    
  </channel>
</rss>